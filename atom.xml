<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>雑なアウトプット</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ppworks.github.io/"/>
  <updated>2020-11-13T22:20:12.852Z</updated>
  <id>https://ppworks.github.io/</id>
  
  <author>
    <name>ppworks</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Dockerでrails s</title>
    <link href="https://ppworks.github.io/posts/251/"/>
    <id>https://ppworks.github.io/posts/251/</id>
    <published>2020-11-13T22:20:12.852Z</published>
    <updated>2020-11-13T22:20:12.852Z</updated>
    
    <content type="html"><![CDATA[<p><a href="/posts/250">#250:  blog/Dockerでrails new</a> 出来たので今回は、<code>rails s</code>したくていろいろ調べながら、最低限の<code>Dockerfile</code>と<code>docker-comose.yml</code>が出来上がったのでメモ。</p><h2 id="Dockerfile-dev"><a href="#Dockerfile-dev" class="headerlink" title="Dockerfile-dev"></a>Dockerfile-dev</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">FROM ruby:2.4.2-slim</span><br><span class="line">MAINTAINER Naoto Koshikawa &lt;koshikawa@ppworks.jp&gt;</span><br><span class="line"></span><br><span class="line">ENV DEBIAN_FRONTEND noninteractive</span><br><span class="line"></span><br><span class="line"># set locale and timezone</span><br><span class="line">RUN apt-get update -qq &amp;&amp; \</span><br><span class="line">  apt-get -y upgrade &amp;&amp; \</span><br><span class="line">  apt-get -y install locales &amp;&amp; \</span><br><span class="line">  apt-get clean &amp;&amp; \</span><br><span class="line">  apt-get autoclean &amp;&amp; \</span><br><span class="line">  apt-get autoremove &amp;&amp; \</span><br><span class="line">  echo en_US.UTF-8 UTF-8 &gt; /etc/locale.gen &amp;&amp; locale-gen &amp;&amp; dpkg-reconfigure locales &amp;&amp; \</span><br><span class="line">  echo &quot;Asia/Tokyo&quot; &gt; /etc/timezone &amp;&amp; dpkg-reconfigure -f noninteractive tzdata</span><br><span class="line"></span><br><span class="line">ENV TZ Asia/Tokyo</span><br><span class="line"></span><br><span class="line">RUN apt-get -y --no-install-recommends install \</span><br><span class="line">  build-essential \</span><br><span class="line">  libpq-dev \</span><br><span class="line">  nodejs \</span><br><span class="line">  wget</span><br><span class="line"></span><br><span class="line">ENV ENTRYKIT_VERSION 0.4.0</span><br><span class="line">RUN wget https://github.com/progrium/entrykit/releases/download/v$&#123;ENTRYKIT_VERSION&#125;/entrykit_$&#123;ENTRYKIT_VERSION&#125;_Linux_x86_64.tgz \</span><br><span class="line">  &amp;&amp; tar -xvzf entrykit_$&#123;ENTRYKIT_VERSION&#125;_Linux_x86_64.tgz \</span><br><span class="line">  &amp;&amp; rm entrykit_$&#123;ENTRYKIT_VERSION&#125;_Linux_x86_64.tgz \</span><br><span class="line">  &amp;&amp; mv entrykit /bin/entrykit \</span><br><span class="line">  &amp;&amp; chmod +x /bin/entrykit \</span><br><span class="line">  &amp;&amp; entrykit --symlink</span><br><span class="line"></span><br><span class="line">RUN mkdir /app</span><br><span class="line">WORKDIR /app</span><br><span class="line"></span><br><span class="line">ENTRYPOINT [ \</span><br><span class="line">  &quot;prehook&quot;, &quot;bundle install -j4 --quiet&quot;, &quot;--&quot;]</span><br></pre></td></tr></table></figure><h2 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a>docker-compose.yml</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">version: &apos;3&apos;</span><br><span class="line">services:</span><br><span class="line">  rails: &amp;app_base</span><br><span class="line">    build:</span><br><span class="line">      context: .</span><br><span class="line">      dockerfile: Dockerfile-dev</span><br><span class="line">    environment:</span><br><span class="line">      DATABASE_URL: &quot;postgres://postgres:@db:5432/your_app_development&quot;</span><br><span class="line">    volumes:</span><br><span class="line">      - &quot;.:/app&quot;</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;3000:3000&quot;</span><br><span class="line">    depends_on:</span><br><span class="line">      - db</span><br><span class="line">    command: [&quot;bundle&quot;, &quot;exec&quot;, &quot;rails&quot;, &quot;s&quot;, &quot;-b&quot;, &quot;0.0.0.0&quot;]</span><br><span class="line">  db:</span><br><span class="line">    image: &quot;postgres:10.0&quot;</span><br><span class="line">    volumes:</span><br><span class="line">      - pg-data:/var/lib/postgresql/data</span><br><span class="line">volumes:</span><br><span class="line">  pg-data:</span><br><span class="line">    driver: local</span><br></pre></td></tr></table></figure><h2 id="dockerignore"><a href="#dockerignore" class="headerlink" title=".dockerignore"></a>.dockerignore</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.git</span><br><span class="line">doc</span><br><span class="line">docker-compose.yml</span><br><span class="line">log</span><br><span class="line">tmp</span><br><span class="line">Dockerfile</span><br><span class="line">Dockerfile-dev</span><br></pre></td></tr></table></figure><h2 id="config-database-yml"><a href="#config-database-yml" class="headerlink" title="config/database.yml"></a>config/database.yml</h2><p>雑に環境変数<code>DATABASE_URL</code>で繋ぐようにしてみた。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">default: &amp;default</span><br><span class="line">  adapter: postgresql</span><br><span class="line">  encoding: unicode</span><br><span class="line">  pool: &lt;%= ENV.fetch(&quot;RAILS_MAX_THREADS&quot;) &#123; 5 &#125; %&gt;</span><br><span class="line">  url: &lt;%= ENV[&apos;DATABASE_URL&apos;] %&gt;</span><br><span class="line">development:</span><br><span class="line">  &lt;&lt;: *default</span><br><span class="line">test:</span><br><span class="line">  &lt;&lt;: *default</span><br><span class="line">production:</span><br><span class="line">  &lt;&lt;: *default</span><br></pre></td></tr></table></figure><h2 id="使い方"><a href="#使い方" class="headerlink" title="使い方"></a>使い方</h2><p><code>Dockerfile</code>を更新した場合は</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker-compose build</span><br><span class="line">docker image prune # 必要に応じて</span><br></pre></td></tr></table></figure><p>普段の開発は</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>migrationなどの実行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose exec rails db:migate</span><br></pre></td></tr></table></figure><p>DBに入る</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose db psql -u postgres</span><br></pre></td></tr></table></figure><p>みたいな感じ。</p><h2 id="参考にした"><a href="#参考にした" class="headerlink" title="参考にした"></a>参考にした</h2><ul><li><a href="https://qiita.com/kawasin73/items/2253523be18e5afd994f" target="_blank" rel="noopener">高速に開発できる Docker + Rails開発環境のテンプレートを作った - Qiita</a></li><li><a href="https://qiita.com/joker1007/items/9f54e763ae640f757cfb" target="_blank" rel="noopener">開発しやすいRails on Docker環境の作り方 - Qiita</a></li></ul><p>この辺のQiita記事を参考にしつつも、そもそも<code>Dockerfile</code>の記述方法もよくわからないし、<code>docker-compose.yml</code>の記述方法もよくわからなかったので、公式ドキュメントを読みまくった。</p><ul><li><a href="https://docs.docker.com/engine/reference/builder/" target="_blank" rel="noopener">Dockerfile reference | Docker Documentation</a></li><li><a href="https://docs.docker.com/compose/compose-file/" target="_blank" rel="noopener">Compose file version 3 reference | Docker Documentation</a></li></ul><p>buildしまくっていると、imageの差分が出来まくるので、不要なものを消したいと思って色々調べた結果</p><blockquote><p><a href="https://suin.io/537" target="_blank" rel="noopener">Dockerの不要なコンテナ・イメージを一括削除する方法</a></p></blockquote><p>がとても参考になった。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker image prune</span><br></pre></td></tr></table></figure><p>をよく使う。</p><p>次はいまConoHa VPSで雑に動かしているアプリをDocker化してみようと思う。<br>本番も、<code>docker-compose</code>使うことになるのかな。だとしたら、今回作った開発用のものは<code>docker-compose-dev.yml</code>みたいな感じになるだろうか。試行錯誤してみよ。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;/posts/250&quot;&gt;#250:  blog/Dockerでrails new&lt;/a&gt; 出来たので今回は、&lt;code&gt;rails s&lt;/code&gt;したくていろいろ調べながら、最低限の&lt;code&gt;Dockerfile&lt;/code&gt;と&lt;code&gt;docker
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Docker の導入と概念の理解</title>
    <link href="https://ppworks.github.io/posts/233/"/>
    <id>https://ppworks.github.io/posts/233/</id>
    <published>2020-11-13T22:20:12.852Z</published>
    <updated>2020-11-13T22:20:12.852Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://docs.docker.com/docker-for-mac/install/" target="_blank" rel="noopener">https://docs.docker.com/docker-for-mac/install/</a><br>からMac版をダウンロード</p><p><img src="https://img.esa.io/uploads/production/attachments/4729/2017/10/26/11/1360462d-7ab6-4836-acf6-90fa998f8d79.png" alt="image.png (405.5 kB)"></p><p>おーわかりやすい。</p><p>よーし。</p><hr><script async class="speakerdeck-embed" data-id="ceaac0f6da814d88b619648d200bc1db" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js"></script><hr><p>WEB+DB PRESS Vol.98</p><table><thead><tr><th>分野</th><th>代表的なツール</th></tr></thead><tbody><tr><td>仮想マシンのOS環境を整える</td><td>Vagrant, kickstart</td></tr><tr><td>ライブラリやミドルウェアを整える</td><td>Chef, Puppet, Ansible</td></tr><tr><td>アプリケーションをデプロイする</td><td>Capistrano</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://docs.docker.com/docker-for-mac/install/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.docker.com/docker-for-mac/install/&lt;
      
    
    </summary>
    
    
      <category term="docker" scheme="https://ppworks.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>てすと</title>
    <link href="https://ppworks.github.io/posts/239/"/>
    <id>https://ppworks.github.io/posts/239/</id>
    <published>2020-11-13T22:20:12.852Z</published>
    <updated>2020-11-13T22:20:12.852Z</updated>
    
    <content type="html"><![CDATA[<p>てすてす。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;てすてす。&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>GitHub Page を Hexo で作る</title>
    <link href="https://ppworks.github.io/posts/240/"/>
    <id>https://ppworks.github.io/posts/240/</id>
    <published>2020-11-13T22:20:12.852Z</published>
    <updated>2020-11-13T22:20:12.852Z</updated>
    
    <content type="html"><![CDATA[<p>個人esaの特定のカテゴリ配下を <a href="https://ppworks.github.io">https://ppworks.github.io</a> としてブログにしてみることにした。</p><ol><li><a href="https://github.com/taea/taea.github.io" target="_blank" rel="noopener">https://github.com/taea/taea.github.io</a> を雑にfork</li><li><a href="https://github.com/ppworks/ppworks.github.io/commit/9f2511addb3eeed0c023912c3078270c1124030b" target="_blank" rel="noopener">taeaをppworks</a>に変える</li><li>esaのGitHub連携をする(personal access tokenは<code>public_repo</code>だけチェックが入っていればよい</li><li>travis-ci.orgのsettingで<code>Build only if .travis.yml is present</code>をチェックする（しないとmasterブランチがコケ続ける）</li><li>travis-ci.orgのsettingで<code>GH_TOKEN</code>をセットする</li><li>masterをまっさらにする(<code>git rm -r archives categories css fancybox js tags index.html</code>)</li><li><a href="https://github.com/ppworks/ppworks.github.io/compare/4b1722c953715da4a07c3c865d728a4cbf96124c...c5fae67e654f335fd5af91c1aef11d3ffd0a8a21" target="_blank" rel="noopener">なんか色々調整する</a><ul><li>とくにpost.dateがmetaデータにないせいで起きる問題へのワークアラウンドがポイントではあるがesa側で柔軟に指定できるようにしたいなという気持ちがある。</li></ul></li></ol><p>とりあえず、それっぽくなった。（テーマは宇宙のままだけど）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;個人esaの特定のカテゴリ配下を &lt;a href=&quot;https://ppworks.github.io&quot;&gt;https://ppworks.github.io&lt;/a&gt; としてブログにしてみることにした。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github
      
    
    </summary>
    
    
      <category term="hexo" scheme="https://ppworks.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>esa 2 GitHub の .travis.yml を微調整</title>
    <link href="https://ppworks.github.io/posts/241/"/>
    <id>https://ppworks.github.io/posts/241/</id>
    <published>2020-11-13T22:20:12.852Z</published>
    <updated>2020-11-13T22:20:12.852Z</updated>
    
    <content type="html"><![CDATA[<p>Copied from: <a href="/posts/240">blog/GitHub Page を Hexo で作る</a></p><p>何も考えずに他人の<code>.travis.yml</code>を適当に使ってたので、ちょっと調整したりした。<br>本当は<code>public</code>をcacheしたいんだけど、どうしてもうまく行かずに一旦<a href="https://github.com/ppworks/ppworks.github.io/commit/8c77f8c49ac221814b4455558561bb4b0dd8cca9" target="_blank" rel="noopener">ほぼ元のと同じ感じになった</a>。この時間、なんだったんだ。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">language: node_js</span><br><span class="line">sudo: false</span><br><span class="line">cache:</span><br><span class="line">  apt: true</span><br><span class="line">  directories:</span><br><span class="line">  - node_modules</span><br><span class="line">node_js:</span><br><span class="line">- &apos;6&apos;</span><br><span class="line">branches:</span><br><span class="line">  only:</span><br><span class="line">  - esa</span><br><span class="line">env:</span><br><span class="line">  global:</span><br><span class="line">  - GIT_COMMITTER_NAME=ppworks</span><br><span class="line">  - GIT_COMMITTER_EMAIL=koshikawa@ppworks.jp</span><br><span class="line">  - GIT_AUTHOR_NAME=ppworks</span><br><span class="line">  - GIT_AUTHOR_EMAIL=koshikawa@ppworks.jp</span><br><span class="line">before_install:</span><br><span class="line">- npm install</span><br><span class="line">before_script:</span><br><span class="line">- git config --global user.name &apos;ppworks&apos;</span><br><span class="line">- git config --global user.email &apos;koshikawa@ppworks.jp&apos;</span><br><span class="line">- rm -fr public</span><br><span class="line">- git clone --depth=1 --branch=master https://github.com/ppworks/ppworks.github.io.git public</span><br><span class="line">- cd public</span><br><span class="line">- git ls-files | xargs -I &#123;&#125; rm -rf &#123;&#125;</span><br><span class="line">- cd -</span><br><span class="line">script:</span><br><span class="line">- $(npm bin)/hexo generate</span><br><span class="line">- cd public</span><br><span class="line">- git add -A</span><br><span class="line">- git commit -m &apos;Update&apos;</span><br><span class="line">- git push https://$GH_TOKEN@github.com/ppworks/ppworks.github.io.git master</span><br></pre></td></tr></table></figure><p>Travis CIでのHexo自動ビルドエラーについて · Issue #2 · llminatoll/wakaba-review <a href="https://github.com/llminatoll/wakaba-review/issues/2" target="_blank" rel="noopener">https://github.com/llminatoll/wakaba-review/issues/2</a></p><p>が大変参考になった。ありがたい。</p><p>そして、dateが毎回書き換わる問題によって、permalinkも毎回変わってしまってつらかったので、一旦permalinkからdateを消すという雑な対応をした。</p><p><a href="https://github.com/ppworks/ppworks.github.io/commit/12eb69754b42587e7c6e6b78b29af83acbed3418" target="_blank" rel="noopener">https://github.com/ppworks/ppworks.github.io/commit/12eb69754b42587e7c6e6b78b29af83acbed3418</a></p><blockquote><p>本当は<code>public</code>をcacheしたいんだけど、どうしてもうまく行かず</p></blockquote><p>どうも<code>public</code>配下の<code>cache</code>をクリアしても、<code>git-clone</code>したrepositoryが<code>master</code>ブランチになってしまって、コンフリクトし続けてしまった。何か手順がミスっていたかもしれない。</p><p>どうせcacheしてもarchiveをネットワーク越しにもってくるし、<code>git clone --depth=1</code>と対して変わらんので、いいかもしれない。</p><blockquote><p>git ls-files | xargs -I {} rm -rf {}</p></blockquote><p>何なの、って思ってたけど、<a href="https://github.com/llminatoll/wakaba-review/issues/2#issuecomment-312908585" target="_blank" rel="noopener">tricknotesさんのコメント</a>をみて理解した。<code>source</code>や<code>theme</code>などから消したファイルの差分を検知するために、一旦雑にワークディレクトリから全ファイルを消してから、<code>hexo generate</code>を実行することで、正しい結果をコミットできる。なるほどだ。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Copied from: &lt;a href=&quot;/posts/240&quot;&gt;blog/GitHub Page を Hexo で作る&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;何も考えずに他人の&lt;code&gt;.travis.yml&lt;/code&gt;を適当に使ってたので、ちょっと調整したりした。&lt;br&gt;本当は&lt;
      
    
    </summary>
    
    
      <category term="hexo" scheme="https://ppworks.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo を esa ぽい URL にする</title>
    <link href="https://ppworks.github.io/posts/242/"/>
    <id>https://ppworks.github.io/posts/242/</id>
    <published>2020-11-13T22:20:12.852Z</published>
    <updated>2020-11-13T22:20:12.852Z</updated>
    
    <content type="html"><![CDATA[<p>Copied from: <a href="/posts/241">blog/esa 2 GitHub の .travis.yml を微調整</a></p><p>Hexoのパスを<code>/posts/242</code>みたいにしてあげれば↑の<strong>Copied from</strong>もいい感じにリンクされるのでは説。</p><p><a href="https://github.com/ppworks/ppworks.github.io/commit/0ca5a701df1482bc638a5320ac047c622ad2d947" target="_blank" rel="noopener">https://github.com/ppworks/ppworks.github.io/commit/0ca5a701df1482bc638a5320ac047c622ad2d947</a></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">diff --git a/_config.yml b/_config.yml</span><br><span class="line">index 76bbbfb..61852bc 100644</span><br><span class="line"><span class="comment">--- a/_config.yml</span></span><br><span class="line"><span class="comment">+++ b/_config.yml</span></span><br><span class="line">@@ -14,14 +14,14 @@ timezone: Asia/Tokyo</span><br><span class="line"> ## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span><br><span class="line"> url: https://ppworks.github.io</span><br><span class="line"> root: /</span><br><span class="line"><span class="deletion">-permalink: :title</span></span><br><span class="line"><span class="addition">+permalink: posts/:number/</span></span><br><span class="line"> permalink_defaults:</span><br><span class="line"></span><br><span class="line"> # Directory</span><br><span class="line"> source_dir: source</span><br><span class="line"> public_dir: public</span><br><span class="line"> tag_dir: tags</span><br><span class="line"><span class="deletion">-archive_dir: archives</span></span><br><span class="line"><span class="addition">+archive_dir: posts</span></span><br><span class="line"> category_dir: categories</span><br><span class="line"> code_dir: downloads/code</span><br><span class="line"> i18n_dir: :lang</span><br><span class="line">diff --git a/themes/landscape/_config.yml b/themes/landscape/_config.yml</span><br><span class="line">index 4c1bb96..e8d5ba2 100644</span><br><span class="line"><span class="comment">--- a/themes/landscape/_config.yml</span></span><br><span class="line"><span class="comment">+++ b/themes/landscape/_config.yml</span></span><br><span class="line"><span class="meta">@@ -1,7 +1,7 @@</span></span><br><span class="line"> # Header</span><br><span class="line"> menu:</span><br><span class="line">   Home: /</span><br><span class="line"><span class="deletion">-  Archives: /archives</span></span><br><span class="line"><span class="addition">+  Archives: /posts</span></span><br><span class="line"> rss: /atom.xml</span><br><span class="line"></span><br><span class="line"> # Content</span><br></pre></td></tr></table></figure><p><code>permalink: posts/:number</code>にしたくなりがちだけど、ブラウザが<code>html</code>として認識しなくなってしまうので、<code>/</code>をつけて、トレイリングスラッシュあり的な扱いでお茶を濁す。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Copied from: &lt;a href=&quot;/posts/241&quot;&gt;blog/esa 2 GitHub の .travis.yml を微調整&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hexoのパスを&lt;code&gt;/posts/242&lt;/code&gt;みたいにしてあげれば↑の&lt;strong&gt;Copi
      
    
    </summary>
    
    
      <category term="hexo" scheme="https://ppworks.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo と esa 連携するときの travis の設定</title>
    <link href="https://ppworks.github.io/posts/243/"/>
    <id>https://ppworks.github.io/posts/243/</id>
    <published>2020-11-13T22:20:12.852Z</published>
    <updated>2020-11-13T22:20:12.852Z</updated>
    
    <content type="html"><![CDATA[<p>Copied from: <a href="/posts/242">blog/Hexo を esa ぽい URL にする</a></p><p>多分こんな感じでいいはず。</p><p><img src="https://img.esa.io/uploads/production/attachments/4729/2017/10/30/11/d537e8a6-7bd8-4db9-be69-003a9e415038.png" alt="image.png (247.2 kB)"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Copied from: &lt;a href=&quot;/posts/242&quot;&gt;blog/Hexo を esa ぽい URL にする&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;多分こんな感じでいいはず。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.esa.io/uploads/product
      
    
    </summary>
    
    
      <category term="hexo" scheme="https://ppworks.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Seed FuをPostgreSQL 10 対応する</title>
    <link href="https://ppworks.github.io/posts/244/"/>
    <id>https://ppworks.github.io/posts/244/</id>
    <published>2020-11-13T22:20:12.852Z</published>
    <updated>2020-11-13T22:20:12.852Z</updated>
    
    <content type="html"><![CDATA[<p>当面は、<a href="https://github.com/ppworks/seed-fu/tree/support-postgresql10" target="_blank" rel="noopener">https://github.com/ppworks/seed-fu/tree/support-postgresql10</a> を使う。</p><blockquote><p><a href="https://www.postgresql.org/docs/10/static/release-10.html" target="_blank" rel="noopener">https://www.postgresql.org/docs/10/static/release-10.html</a><br>Move sequences’ metadata fields into a new pg_sequence system catalog (Peter Eisentraut)</p></blockquote><blockquote><p>A sequence relation now stores only the fields that can be modified by nextval(), that is last_value, log_cnt, and is_called. Other sequence properties, such as the starting value and increment, are kept in a corresponding row of the <strong>pg_sequence</strong> catalog. ALTER SEQUENCE updates are now fully transactional, implying that the sequence is locked until commit. The nextval() and setval() functions remain nontransactional.</p></blockquote><blockquote><p>The main incompatibility introduced by this change is that selecting from a sequence relation now returns only the three fields named above. To obtain the sequence’s other properties, applications must look into <strong>pg_sequence</strong>. The new system view pg_sequences can also be used for this purpose; it provides column names that are more compatible with existing code.</p></blockquote><blockquote><p>The output of psql’s \d command for a sequence has been redesigned, too.</p></blockquote><p>とのことで、いままで <code>PostgreSQL</code> の <code>ID Sequence</code>を設定していた、こういうコードが落ちるようになった。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT setval(<span class="string">'<span class="subst">#&#123;sequence&#125;</span>'</span>, (SELECT GREATEST(MAX(<span class="comment">#&#123;quoted_id&#125;)+(SELECT increment_by FROM #&#123;sequence&#125;), (SELECT min_value FROM #&#123;sequence&#125;)) FROM #&#123;<span class="doctag">@model</span>_class.quoted_table_name&#125;), false)</span></span><br></pre></td></tr></table></figure><p>エラーはこんな感じ</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Failure/Error: SeedFu.seed</span><br><span class="line"></span><br><span class="line">ActiveRecord::StatementInvalid:</span><br><span class="line">  PG::UndefinedColumn: ERROR:  column &quot;increment_by&quot; does not exist</span><br></pre></td></tr></table></figure><p>以下のように、新たに導入された<code>pg_sequence</code>カタログを参照するように<a href="https://github.com/mbleigh/seed-fu/pull/121" target="_blank" rel="noopener">変更した</a>。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT setval(<span class="string">'<span class="subst">#&#123;sequence&#125;</span>'</span>, (SELECT GREATEST(MAX(<span class="comment">#&#123;quoted_id&#125;)+(SELECT seqincrement FROM pg_sequence WHERE seqrelid = '#&#123;sequence&#125;'::regclass), (SELECT seqmin FROM pg_sequence WHERE seqrelid = '#&#123;sequence&#125;'::regclass)) FROM #&#123;<span class="doctag">@model</span>_class.quoted_table_name&#125;),</span></span><br></pre></td></tr></table></figure><p>ちなみにRailsの類似処理は既にマージされていた。</p><blockquote><p><a href="https://github.com/rails/rails/pull/28864" target="_blank" rel="noopener">https://github.com/rails/rails/pull/28864</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;当面は、&lt;a href=&quot;https://github.com/ppworks/seed-fu/tree/support-postgresql10&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/ppworks/seed
      
    
    </summary>
    
    
      <category term="rails" scheme="https://ppworks.github.io/tags/rails/"/>
    
  </entry>
  
  <entry>
    <title>Hexo のサイドバーに travis の builds を表示した</title>
    <link href="https://ppworks.github.io/posts/245/"/>
    <id>https://ppworks.github.io/posts/245/</id>
    <published>2020-11-13T22:20:12.852Z</published>
    <updated>2020-11-13T22:20:12.852Z</updated>
    
    <content type="html"><![CDATA[<p>Copied from: <a href="/posts/243">blog/Hexo と esa 連携するときの travis の設定</a></p><p>travisのbuildろぐをサイドバーに出してみたくて出してみた。フィードは、こんな感じでアクセスできるので<a href="https://github.com/ppworks/ppworks.github.io/commit/fbf303984bde502b0329df34951e524052feb26c" target="_blank" rel="noopener">JavaScriptで持ってきてパース</a>する。だいぶ雑なコードになったので、あとでもうちょいちゃんとするほうがいいかも。</p><blockquote><p><a href="https://api.travis-ci.org/repos/ppworks/ppworks.github.io/builds.atom" target="_blank" rel="noopener">https://api.travis-ci.org/repos/ppworks/ppworks.github.io/builds.atom</a></p></blockquote><p><img src="https://img.esa.io/uploads/production/attachments/4729/2017/10/31/11/f854941d-2b7e-4ae3-bc36-9fe51bfa6bb5.png" width="300"></p><p>それっぽく表示するために、各ステータスのtravis-ci上での色を調べてた。</p><table><thead><tr><th>status</th><th>color</th></tr></thead><tbody><tr><td>received</td><td><span style="border-left-style: solid; border-left-width: 10px; border-color: #edde3f; color: #edde3f; background-color: #fff; padding: 3px 6px 3px 6px;">#edde3f</span></td></tr><tr><td>queued</td><td><span style="border-left-style: solid; border-left-width: 10px; border-color: #edde3f; color: #edde3f; background-color: #fff; padding: 3px 6px 3px 6px;">#edde3f</span></td></tr><tr><td>created</td><td><span style="border-left-style: solid; border-left-width: 10px; border-color: #edde3f; color: #edde3f; background-color: #fff; padding: 3px 6px 3px 6px;">#edde3f</span></td></tr><tr><td>booting</td><td><span style="border-left-style: solid; border-left-width: 10px; border-color: #edde3f; color: #edde3f; background-color: #fff; padding: 3px 6px 3px 6px;">#edde3f</span></td></tr><tr><td>started</td><td><span style="border-left-style: solid; border-left-width: 10px; border-color: #edde3f; color: #edde3f; background-color: #fff; padding: 3px 6px 3px 6px;">#edde3f</span></td></tr><tr><td>canceled</td><td><span style="border-left-style: solid; border-left-width: 10px; border-color: #9d9d9d; color: #9d9d9d; background-color: #fff; padding: 3px 6px 3px 6px;">#9d9d9d</span></td></tr><tr><td>passed</td><td><span style="border-left-style: solid; border-left-width: 10px; border-color: #39aa56; color: #39aa56; background-color: #fff; padding: 3px 6px 3px 6px;">#39aa56</span></td></tr><tr><td>errored</td><td><span style="border-left-style: solid; border-left-width: 10px; border-color: #db4545; color: #db4545; background-color: #fff; padding: 3px 6px 3px 6px;">#db4545</span></td></tr><tr><td>failed</td><td><span style="border-left-style: solid; border-left-width: 10px; border-color: #db4545; color: #db4545; background-color: #fff; padding: 3px 6px 3px 6px;">#db4545</span></td></tr></tbody></table><p>ステータスの一覧がtravis-ciのドキュメントで探し出せず、CSSのスタイルから調べることになった。各ステータスの正しい順序は未検証。できれば各ステータスの意味も正確に知りたい気持ちもある。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Copied from: &lt;a href=&quot;/posts/243&quot;&gt;blog/Hexo と esa 連携するときの travis の設定&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;travisのbuildろぐをサイドバーに出してみたくて出してみた。フィードは、こんな感じでアクセスできるので&lt;a
      
    
    </summary>
    
    
      <category term="hexo" scheme="https://ppworks.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Heroku SSL EndpointからAutomated Certificate Managementへ移行する</title>
    <link href="https://ppworks.github.io/posts/249/"/>
    <id>https://ppworks.github.io/posts/249/</id>
    <published>2020-11-13T22:20:12.852Z</published>
    <updated>2020-11-13T22:20:12.852Z</updated>
    
    <content type="html"><![CDATA[<p>Heroku SSL EndpointからAutomated Certificate Managementへダウンタイムなしで移行したので、その記録。</p><p>Heroku SSL化を挟まないと、<code>heroku certs:auto:enable</code>してから<code>status: OK</code>になるまでの間にダウンタイムが発生する。そのあたりの注意点は公式ドキュメントに書いてあった。</p><blockquote><p><a href="https://devcenter.heroku.com/articles/automated-certificate-management#migrating-from-ssl-endpoint" target="_blank" rel="noopener">https://devcenter.heroku.com/articles/automated-certificate-management#migrating-from-ssl-endpoint</a><br>Migrating from the SSL Endpoint addon to Automated Certificate Management requires a DNS change. However, you can use Heroku SSL (SNI) as an intermediate step to avoid downtime for your custom domain. Start by following these instructions to migrate from SSL Endpoint to Heroku SSL (SNI). Once that process is complete, you can enable ACM with no downtime as described above.</p></blockquote><p>いちど、Heroku SSLへ移行してから、ACM(Automated Certificate Management)へ移行すればいい。</p><p>Heroku SSLを使うには、<code>heroku certs:add</code>コマンドに<code>--type sni</code>オプションを付けて証明書を追加する。</p><p>このとき、既存の証明書と同じものをアップロードしてオッケー。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">heroku certs:add example.com.crt example.com.key --type sni</span><br></pre></td></tr></table></figure><p>すると、こんな感じで2つの証明書が表示される。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">heroku certs -a pplog</span><br><span class="line">Name                Endpoint                  Common Name(s)            Expires               Trusted  Type</span><br><span class="line">──────────────────  ────────────────────────  ────────────────────────  ──────────</span><br><span class="line">gifu-1545           gifu-1545.herokussl.com   www.pplog.net, pplog.net  2018-01-30 03:10 UTC  True     Endpoint</span><br><span class="line">camarasaurus-91097  (Not applicable for SNI)  www.pplog.net, pplog.net  2018-01-30 03:10 UTC  True     SNI</span><br></pre></td></tr></table></figure><p>ドメインを確認すると</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">heroku domains -a pplog</span><br><span class="line">=== pplog Heroku Domain</span><br><span class="line">pplog.herokuapp.com</span><br><span class="line"></span><br><span class="line">=== pplog Custom Domains</span><br><span class="line">Domain Name    DNS Record Type  DNS Target</span><br><span class="line">─────────────  ───────────────  ───────────────────────────</span><br><span class="line">www.pplog.net  CNAME            www.pplog.net.herokudns.com</span><br><span class="line">pplog.net      ALIAS or ANAME   pplog.net.herokudns.com</span><br></pre></td></tr></table></figure><p><code>CNAME</code>と<code>ALIAS</code>に設定すべき項目が表示されるので、これらをDNSの設定に反映する。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig CNAME www.pplog.net</span><br></pre></td></tr></table></figure><p>TTLの設定に寄るけども、DNS反映されたら、<code>Heroku SSL Endpoint</code>のアドオンを削除する。（焦らなくてもいいので次の日にでも）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">heroku addons:destroy ssl -a pplog</span><br></pre></td></tr></table></figure><p><code>Automated Certificate Management</code>を有効にする。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">heroku certs:auto:enable -a pplog</span><br><span class="line">Enabling Automatic Certificate Management... done</span><br></pre></td></tr></table></figure><p>すぐに確認すると、<code>In Progress</code>になっている。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">heroku certs:auto -a pplog</span><br><span class="line">=== Automatic Certificate Management is enabled on pplog</span><br><span class="line"></span><br><span class="line">Domain         Status</span><br><span class="line">─────────────  ───────────</span><br><span class="line">www.pplog.net  In Progress</span><br><span class="line">pplog.net      In Progress</span><br></pre></td></tr></table></figure><p>しばらくすると、<code>OK</code>になる。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">heroku certs:auto -a pplog</span><br><span class="line">=== Automatic Certificate Management is enabled on pplog</span><br><span class="line"></span><br><span class="line">Certificate details:</span><br><span class="line">Common Name(s): pplog.net</span><br><span class="line">                www.pplog.net</span><br><span class="line">Expires At:     2018-01-30 04:51 UTC</span><br><span class="line">Issuer:         /C=US/O=Let&apos;s Encrypt/CN=Let&apos;s Encrypt Authority X3</span><br><span class="line">Starts At:      2017-11-01 04:51 UTC</span><br><span class="line">Subject:        /CN=pplog.net</span><br><span class="line">SSL certificate is verified by a root authority.</span><br><span class="line"></span><br><span class="line">Domain         Status</span><br><span class="line">─────────────  ──────</span><br><span class="line">www.pplog.net  OK</span><br><span class="line">pplog.net      OK</span><br></pre></td></tr></table></figure><p>証明書の<code>Type</code>が<code>ACM</code>になっていれば完了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">heroku certs -a pplog</span><br><span class="line">Name                Common Name(s)            Expires               Trusted  Type</span><br><span class="line">──────────────────  ────────────────────────  ────────────────────  ───────  ────</span><br><span class="line">camarasaurus-91097  pplog.net, www.pplog.net  2018-01-30 04:51 UTC  True     ACM</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Heroku SSL EndpointからAutomated Certificate Managementへダウンタイムなしで移行したので、その記録。&lt;/p&gt;
&lt;p&gt;Heroku SSL化を挟まないと、&lt;code&gt;heroku certs:auto:enable&lt;/code
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Dockerでrails new</title>
    <link href="https://ppworks.github.io/posts/250/"/>
    <id>https://ppworks.github.io/posts/250/</id>
    <published>2020-11-13T22:20:12.852Z</published>
    <updated>2020-11-13T22:20:12.852Z</updated>
    
    <content type="html"><![CDATA[<p>Macのローカルで<code>rails new</code>する際に、最初にどこかに<code>rails</code>が必要なのが嫌で、<code>rails new</code>で出来たディレクトリだけ欲しくて、<code>Dockerfile</code>を書いてみた。</p><p><a href="https://github.com/ppworks/docker-rails_new" target="_blank" rel="noopener">https://github.com/ppworks/docker-rails_new</a></p><h2 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ruby:<span class="number">2.4</span>.<span class="number">2</span>-slim</span><br><span class="line"><span class="keyword">MAINTAINER</span> Naoto Koshikawa &lt;koshikawa@ppworks.jp&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> DEBIAN_FRONTEND noninteractive</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span> apt-get update -qq &amp;&amp; \</span><br><span class="line">    apt-get -y install build-essential # nio4r</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span> mkdir /app</span><br><span class="line"><span class="keyword">WORKDIR</span> /app</span><br><span class="line"><span class="keyword">COPY</span> Gemfile /app/Gemfile</span><br><span class="line"><span class="keyword">RUN</span> bundle install -j4</span><br></pre></td></tr></table></figure><h2 id="Gemfile"><a href="#Gemfile" class="headerlink" title="Gemfile"></a>Gemfile</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ruby &apos;2.4.2&apos;</span><br><span class="line">source &apos;https://rubygems.org&apos;</span><br><span class="line">gem &apos;rails&apos;, &apos;&gt;= 5.1&apos;</span><br></pre></td></tr></table></figure><h2 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a>docker-compose.yml</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">version: &apos;3&apos;</span><br><span class="line">services:</span><br><span class="line">  rails-new:</span><br><span class="line">    build:</span><br><span class="line">      context: .</span><br><span class="line">      dockerfile: Dockerfile</span><br><span class="line">    volumes:</span><br><span class="line">      - &quot;.:/app&quot;</span><br><span class="line">    tty: true</span><br><span class="line">    stdin_open: true</span><br></pre></td></tr></table></figure><h2 id="rails-new"><a href="#rails-new" class="headerlink" title="rails new"></a>rails new</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~/docker</span><br><span class="line">git@github.com:ppworks/docker-rails_new.git dev</span><br><span class="line">cd dev</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose run --rm rails-new rails new your-awesome-app --skip-bundle</span><br></pre></td></tr></table></figure><p>Dockerよくわかってないので、もっとかっこいい方法があるかもしれない。<br>次は、Docker上で<code>rails s</code>してみたいと思う。</p><h2 id="追記"><a href="#追記" class="headerlink" title="追記"></a>追記</h2><p>2017-11-02 16:12<br><a href="https://github.com/ppworks/docker-rails_new/pull/1" target="_blank" rel="noopener">https://github.com/ppworks/docker-rails_new/pull/1</a><br>の内容を反映した。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Macのローカルで&lt;code&gt;rails new&lt;/code&gt;する際に、最初にどこかに&lt;code&gt;rails&lt;/code&gt;が必要なのが嫌で、&lt;code&gt;rails new&lt;/code&gt;で出来たディレクトリだけ欲しくて、&lt;code&gt;Dockerfile&lt;/code&gt;を書いてみ
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Docker を使ってみる</title>
    <link href="https://ppworks.github.io/posts/237/"/>
    <id>https://ppworks.github.io/posts/237/</id>
    <published>2020-11-13T22:20:12.852Z</published>
    <updated>2020-11-13T22:20:12.852Z</updated>
    
    <content type="html"><![CDATA[<p>Copied from: <a href="/posts/233">Docker の導入と概念の理解</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker pull httpd</span><br><span class="line">docker image list</span><br><span class="line">docker container list</span><br><span class="line">docker run -d -p 8080:80 httpd:latest</span><br><span class="line">docker ps</span><br><span class="line">docker container stop</span><br><span class="line">docker container rm</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker volume ls</span><br><span class="line">docker volume create myvolume</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://qiita.com/noralife/items/18301143c20cc5172c56" target="_blank" rel="noopener">よく使うDockerコマンド - Qiita</a><br>コンテナをつくってログインする: <code>docker run -it</code><br>コンテナをバックグランドで動作させる: <code>docker run -d</code><br>コンテナを環境変数で設定する: <code>docker run -e</code></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Copied from: &lt;a href=&quot;/posts/233&quot;&gt;Docker の導入と概念の理解&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class
      
    
    </summary>
    
    
      <category term="docker" scheme="https://ppworks.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Hexo の archives の表示順序を変える</title>
    <link href="https://ppworks.github.io/posts/253/"/>
    <id>https://ppworks.github.io/posts/253/</id>
    <published>2020-11-13T22:20:12.852Z</published>
    <updated>2020-11-13T22:20:12.852Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/hexojs/hexo-generator-index" target="_blank" rel="noopener">hexo-generator-index</a>にはある<code>order_by</code>オプションが<a href="https://github.com/hexojs/hexo-generator-archive" target="_blank" rel="noopener">hexo-generator-archive</a>には、なかったので足した。</p><blockquote><p><a href="https://github.com/hexojs/hexo-generator-archive/pull/9" target="_blank" rel="noopener">Enable archives to sort by custom order by ppworks · Pull Request #9 · hexojs/hexo-generator-archive</a></p></blockquote><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">   var config = this.config;</span><br><span class="line">   var archiveDir = config.archive_dir;</span><br><span class="line">   var paginationDir = config.pagination_dir || 'page';</span><br><span class="line"><span class="deletion">-  var allPosts = locals.posts.sort('-date');</span></span><br><span class="line"><span class="addition">+  var allPosts = locals.posts.sort(config.archive_generator.order_by || '-date');</span></span><br><span class="line">   var perPage = config.archive_generator.per_page;</span><br><span class="line">   var result = [];</span><br></pre></td></tr></table></figure><p><a href="https://github.com/hexojs/hexo-generator-archive/releases/tag/0.1.5" target="_blank" rel="noopener"><strong>0.1.5</strong></a>以降を使うと<code>order_by</code>オプションが使えるようになるので、<a href="https://github.com/ppworks/ppworks.github.io/commit/d1dcdbd708e327953acda9c1a474b37e5ef78d6a" target="_blank" rel="noopener">こんな感じで</a><code>_config.yml</code>に<code>order_by</code>を追加する。</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">diff --git a/_config.yml b/_config.yml</span><br><span class="line">index 9c306f1..232f072 100644</span><br><span class="line"><span class="comment">--- a/_config.yml</span></span><br><span class="line"><span class="comment">+++ b/_config.yml</span></span><br><span class="line">@@ -53,6 +53,9 @@ index_generator:</span><br><span class="line">   per_page: 10</span><br><span class="line">   order_by: -number</span><br><span class="line"></span><br><span class="line"><span class="addition">+archive_generator:</span></span><br><span class="line"><span class="addition">+  order_by: -number</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"> # Category &amp; Tag</span><br><span class="line"> default_category: uncategorized</span><br><span class="line"> category_map:</span><br></pre></td></tr></table></figure><p>このhexoはesaと連携しているので、<code>index</code>と同じように<code>number</code>の降順にした。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://github.com/hexojs/hexo-generator-index&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo-generator-index&lt;/a&gt;にはある&lt;code&gt;order_by&lt;/code&gt;
      
    
    </summary>
    
    
      <category term="hexo" scheme="https://ppworks.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>esaのslideをembedする</title>
    <link href="https://ppworks.github.io/posts/262/"/>
    <id>https://ppworks.github.io/posts/262/</id>
    <published>2020-11-13T22:20:12.852Z</published>
    <updated>2020-11-13T22:20:12.852Z</updated>
    
    <content type="html"><![CDATA[<div style="position: relative;width: 100%;border: 1px solid #999; border-radius:7px;overflow:hidden;"><br><div style="padding-top: 75%;"></div><br><iframe src="https://esa-pages.io/p/sharing/3/posts/1117/1901213944ee86efdaea-slides.html#/" style="border-style: none;position: absolute;top: 0;left: 0;width: 100%;height: 100%;" scrolling="no" frameborder="no"><br></iframe></div><p>以下みたいな感じで、マークアップする。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;position: relative;width: 100%;border: 1px solid #999; border-radius:7px;overflow:hidden;&quot;&gt;</span><br><span class="line">&lt;div style=&quot;padding-top: 75%;&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;iframe src=&quot;https://esa-pages.io/p/sharing/3/posts/1117/1901213944ee86efdaea-slides.html#/&quot; style=&quot;border-style: none;position: absolute;top: 0;left: 0;width: 100%;height: 100%;&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; /&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>こんな感じのマークアップを書く。esa側でいい感じにすべきだよなあ、します。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div style=&quot;position: relative;width: 100%;border: 1px solid #999; border-radius:7px;overflow:hidden;&quot;&gt;&lt;br&gt;&lt;div style=&quot;padding-top: 75%;&quot;&gt;&lt;/
      
    
    </summary>
    
    
      <category term="esa" scheme="https://ppworks.github.io/tags/esa/"/>
    
  </entry>
  
  <entry>
    <title>Unityで「もぐらたたきゲーム」を作ってみる1</title>
    <link href="https://ppworks.github.io/posts/268/"/>
    <id>https://ppworks.github.io/posts/268/</id>
    <published>2020-11-13T22:20:12.852Z</published>
    <updated>2020-11-13T22:20:12.852Z</updated>
    
    <content type="html"><![CDATA[<p>Unityさっぱりわからん。</p><h1 id="そもそもわからん"><a href="#そもそもわからん" class="headerlink" title="そもそもわからん"></a>そもそもわからん</h1><p>わからないことを、たまたま近くにいたおじさんに質問して見た。（おじさん is <a href="https://twitter.com/monry" target="_blank" rel="noopener">@monry</a>）</p><ul><li>オブジェクトを置く、この世界をなんていうんだ<ul><li><img src="https://img.esa.io/uploads/production/custom_emojis/4729/1744/image/e73ee6f09ca2ecb4af94ceafe52af24e.jpg" style="width: 20px; height: 20px; border-radius: 20px;" alt="monry said: ">レベルと言う</li></ul></li><li>SceneにまたがったGameObjectの配置ってどうやんの<ul><li><img src="https://img.esa.io/uploads/production/custom_emojis/4729/1745/image/f90ad20e129cc4a88d16841bdacf8eff.png" style="width: 20px; height: 20px; border-radius: 20px;" alt="ppworks said: "> 「<a href="https://qiita.com/srtkmsw/items/bf6a33d6bb2987c74936" target="_blank" rel="noopener">Scene切替時でもGameObject等を破棄せずに保持しておく方法 - Qiita</a>」を見つけましたよ。</li><li><img src="https://img.esa.io/uploads/production/custom_emojis/4729/1744/image/e73ee6f09ca2ecb4af94ceafe52af24e.jpg" style="width: 20px; height: 20px; border-radius: 20px;" alt="monry said: "> <code>DontDestroyOnLoad</code>でやるのはありだけど、専用シーンが出来上がって管理しづらい。</li><li><img src="https://img.esa.io/uploads/production/custom_emojis/4729/1744/image/e73ee6f09ca2ecb4af94ceafe52af24e.jpg" style="width: 20px; height: 20px; border-radius: 20px;" alt="monry said: "> うちのプロジェクトでは<a href="https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.LoadScene.html" target="_blank" rel="noopener">SceneManager.LoadSchene</a>の第二引数で<code>LoadSceneMode.Additive</code>を渡す作戦を使っている。Sceneが合成されるイメージ。いわゆるモーダル表示みたいなことをしたいときにはこれ！</li><li><img src="https://img.esa.io/uploads/production/custom_emojis/4729/1745/image/f90ad20e129cc4a88d16841bdacf8eff.png" style="width: 20px; height: 20px; border-radius: 20px;" alt="ppworks said: "> <strong>ところで、Sceneごとにカメラが置いてあるけど、合成された時はどうすんの？</strong></li></ul></li><li>2Dで、<code>Sprite</code>のスケール設定は、<code>Sprite</code>の設定にある<code>Pixels Per Unit</code>と<code>GameObject</code>の<code>Transform</code>の<code>Scale</code>でやるのどっちがいいの？<ul><li><img src="https://img.esa.io/uploads/production/custom_emojis/4729/1744/image/e73ee6f09ca2ecb4af94ceafe52af24e.jpg" style="width: 20px; height: 20px; border-radius: 20px;" alt="monry said: "> Scaleは階層構造の配下のGameObjectにも影響するから避けたい。</li><li><img src="https://img.esa.io/uploads/production/custom_emojis/4729/1744/image/e73ee6f09ca2ecb4af94ceafe52af24e.jpg" style="width: 20px; height: 20px; border-radius: 20px;" alt="monry said: "> そもそも、<code>2D</code>は、<code>GUI</code>で構築しちゃうと言う手も</li><li><img src="https://img.esa.io/uploads/production/custom_emojis/4729/1745/image/f90ad20e129cc4a88d16841bdacf8eff.png" style="width: 20px; height: 20px; border-radius: 20px;" alt="ppworks said: "> な、なんだってー！！！その発想はなかったでござるよ。にんにん。</li></ul></li><li>カメラの画角計算がわからん。カメラに写る範囲にぴったり置きたい。たとえば、最初から置いてあるMain Cameraをz: -10の位置においたとき画面に描写される範囲の計算方法は？<ul><li><img src="https://img.esa.io/uploads/production/custom_emojis/4729/1745/image/f90ad20e129cc4a88d16841bdacf8eff.png" style="width: 20px; height: 20px; border-radius: 20px;" alt="ppworks said: "><a href="https://docs.unity3d.com/2017.1/Documentation/Manual/class-Camera.html" target="_blank" rel="noopener">Unity - Manual: Camera</a>からリンクされている<a href="https://docs.unity3d.com/ScriptReference/Camera-orthographicSize.html" target="_blank" rel="noopener">Unity - Scripting API: Camera.orthographicSize</a>に書いてあった。<code>Camera&#39;s half-size when in orthographic mode.</code>な。</li><li><img src="https://img.esa.io/uploads/production/custom_emojis/4729/1745/image/f90ad20e129cc4a88d16841bdacf8eff.png" style="width: 20px; height: 20px; border-radius: 20px;" alt="ppworks said: "><code>orthographic</code>モードにしている際の<code>size</code>に縦方向の半分に収める<code>unit</code>数を入れてやればいい。</li><li><img src="https://img.esa.io/uploads/production/custom_emojis/4729/1745/image/f90ad20e129cc4a88d16841bdacf8eff.png" style="width: 20px; height: 20px; border-radius: 20px;" alt="ppworks said: "> 例えば、<code>16:9</code>の画面のカメラにピッタリ<code>16unit x 9unit</code>を写したければ、<code>4.5</code>と入力する。</li></ul></li><li>Build Setting<ul><li><img src="https://img.esa.io/uploads/production/custom_emojis/4729/1745/image/f90ad20e129cc4a88d16841bdacf8eff.png" style="width: 20px; height: 20px; border-radius: 20px;" alt="ppworks said: "> 追加したsceneしか使えない？</li><li><img src="https://img.esa.io/uploads/production/custom_emojis/4729/1744/image/e73ee6f09ca2ecb4af94ceafe52af24e.jpg" style="width: 20px; height: 20px; border-radius: 20px;" alt="monry said: "> そうそう。プロジェクトに含まれるすべてのものがビルド対象というわけではない。ここで指定したシーンに含まれるものがビルド対象となるので、気をつけて。</li></ul></li></ul><p>ほう。<a href="https://twitter.com/monry" target="_blank" rel="noopener">@monry</a>便利。</p><h1 id="設計してみる"><a href="#設計してみる" class="headerlink" title="設計してみる"></a>設計してみる</h1><ul><li>レベル上に登場するGameObject<ul><li>背景などのハリボテ<ul><li>各Sceneを通じて、最初に用意したらとっておきたい</li></ul></li><li>Prefab<ul><li>もぐら<ul><li>穴からもぐらが出てくるアニメーションを持つ</li><li>3種類ぐらいいる(猫、おじさん、もんりぃ）</li></ul></li></ul></li></ul></li><li>シーン<ul><li>トップ<ul><li>処理<ul><li>ワールドの準備</li></ul></li><li>UI<ul><li>ゲーム開始ボタン</li><li>レコード表示ボタン</li></ul></li></ul></li><li>ゲーム<ul><li>処理<ul><li>ゲーム開始</li><li>ユーザーの操作イベントを受付開始</li><li>もぐらをランダムに生成する</li><li>タイマーのセット</li><li>スコアの記録</li><li>終了イベントを検知して<ul><li>レコードを記録</li><li>ゲームを終了し結果へ移動<ul><li>UI</li></ul></li></ul></li><li>残り時間表示</li><li>スコア表示</li></ul></li></ul></li><li>結果<ul><li>UI<ul><li>得点の表示</li><li>タイトルへ戻るボタン</li><li>再度ゲーム開始ボタン</li></ul></li></ul></li><li>レコード<ul><li>処理<ul><li>過去のレコードを表示</li></ul></li><li>UI<ul><li>レコード表示リスト</li><li>トップへ戻るボタン</li></ul></li></ul></li></ul></li></ul><p><code>2D</code>ゲームなので、<code>GUI</code>ですべて対応できる予感もするけど、今回はあえてハリボテの<code>Sprite</code>を配置して作ってみようかな。</p><h1 id="ソース"><a href="#ソース" class="headerlink" title="ソース"></a>ソース</h1><h2 id="MainSceneController-cs"><a href="#MainSceneController-cs" class="headerlink" title="MainSceneController.cs"></a>MainSceneController.cs</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class MainSceneController : MonoBehaviour &#123;</span><br><span class="line"></span><br><span class="line">void Start () &#123;</span><br><span class="line">Debug.Log (&quot;Hi, I&apos;m MainScene!!!&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Update () &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="TitleSceneController"><a href="#TitleSceneController" class="headerlink" title="TitleSceneController"></a>TitleSceneController</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.UI;</span><br><span class="line">using UnityEngine.SceneManagement;</span><br><span class="line"></span><br><span class="line">public class TitleSceneController : MonoBehaviour &#123;</span><br><span class="line">// https://qiita.com/momomo/items/f8c16004123f38e86fc0 を参考に変更する！</span><br><span class="line">public Button startButton;</span><br><span class="line">public GameObject background;</span><br><span class="line"></span><br><span class="line">void Start () &#123;</span><br><span class="line">Button button = this.startButton.GetComponent&lt;Button&gt;();</span><br><span class="line">button.onClick.AddListener(ClickStartButton);</span><br><span class="line"></span><br><span class="line">DontDestroyOnLoad (this.background.transform.gameObject);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Update () &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void ClickStartButton() &#123;</span><br><span class="line">Debug.Log(&quot;You have clicked the button!&quot;);</span><br><span class="line">SceneManager.LoadScene (&quot;scenes/MainScene&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>今回は、Unityの概念の謎を調べたり試行錯誤して、設計をしただけで終わってしまった。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Unityさっぱりわからん。&lt;/p&gt;
&lt;h1 id=&quot;そもそもわからん&quot;&gt;&lt;a href=&quot;#そもそもわからん&quot; class=&quot;headerlink&quot; title=&quot;そもそもわからん&quot;&gt;&lt;/a&gt;そもそもわからん&lt;/h1&gt;&lt;p&gt;わからないことを、たまたま近くにいたおじさんに質
      
    
    </summary>
    
    
      <category term="unity" scheme="https://ppworks.github.io/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>uGUIについて学ぶ</title>
    <link href="https://ppworks.github.io/posts/270/"/>
    <id>https://ppworks.github.io/posts/270/</id>
    <published>2020-11-13T22:20:12.852Z</published>
    <updated>2020-11-13T22:20:12.852Z</updated>
    
    <content type="html"><![CDATA[<p><a href="/posts/268">2Dゲーム作る</a>のは、<code>uGUI</code>の方が調整しやすいのではないか？と思い、<code>uGUI</code>を勉強してみることにした。</p><p><a href="http://schoo.jp/class/4558/room" target="_blank" rel="noopener">UnityのuGUIで作る2Dゲーム -基本編/CanvasにUIを配置してみよう- - Schoo（スクー）</a></p><ul><li>uGUI<ul><li>Unity Graphical User Interface</li><li>公式マニュアルにはuGUIという名前は登場しない</li><li>ユーザーのあいだで呼ばれていた</li></ul></li><li>出来ること<ul><li>UIの配置</li><li>2Dゲーム要素の描画</li><li>画像などへのポインタイベント処理</li></ul></li><li>Canvas<ul><li>ここにuGUIを配置していく</li><li>ヒエラルキーの上においてあるほど、後ろ</li></ul></li></ul><p>2Dのレベルに<code>GameObject</code>を置いて、<code>MainCamera</code>で描写される範囲を考慮して画面設計するよりも、<code>Canvas</code>の方が柔軟かもなあと思った。</p><p><code>Rect Transform</code>で直感的な配置もしやすそう。</p><p>前回作ったものを捨てて、1から作り直してみよう。</p><p>Unity初心者で、2Dゲーム作る際には<a href="https://twitter.com/monry" target="_blank" rel="noopener">@monry</a>の</p><blockquote><p><a href="https://schoo.jp/class/4558" target="_blank" rel="noopener">UnityのuGUIで作る2Dゲーム</a><br>個人開発者から大手ゲームメーカーまで幅広い層のデベロッパーが利用しているゲームエンジン「Unity」が提供する2D関連機能のuGUIを用いて2Dゲームを作る方法について学びます。</p></blockquote><blockquote><p>Unityの使い方は何となく分かってきたけどUIの配置に悩んでいる方、Unity上でGUIの構築を助けてくれる機能「uGUI」のより高度な使い方を学びたい方、Unityを用いてUI配置を行いプログラマーと協働したいUIデザイナーの方向けに、分かりやすくUnityのuGUIを解説していきます。</p></blockquote><p>これみるのマジおすすめ！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;/posts/268&quot;&gt;2Dゲーム作る&lt;/a&gt;のは、&lt;code&gt;uGUI&lt;/code&gt;の方が調整しやすいのではないか？と思い、&lt;code&gt;uGUI&lt;/code&gt;を勉強してみることにした。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://schoo.jp/cl
      
    
    </summary>
    
    
      <category term="unity" scheme="https://ppworks.github.io/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>Unityで「もぐらたたきゲーム」を作ってみる2</title>
    <link href="https://ppworks.github.io/posts/272/"/>
    <id>https://ppworks.github.io/posts/272/</id>
    <published>2020-11-13T22:20:12.852Z</published>
    <updated>2020-11-13T22:20:12.852Z</updated>
    
    <content type="html"><![CDATA[<p><a href="/posts/270">#270:  blog/uGUIについて学んだ</a> 結果、2Dゲームは<code>uGUI</code>で作った方が楽ぽいので、作り直しはじめた。</p><ul><li>もぐらたたきのイラスト | かわいいフリー素材集 いらすとや <a href="http://www.irasutoya.com/2015/03/blog-post_6.html" target="_blank" rel="noopener">http://www.irasutoya.com/2015/03/blog-post_6.html</a><br>をゲーム化する作戦でやってみている。<ul><li>まずはパーツを分けるためにPhotoShopをがんばった <img src="https://img.esa.io/uploads/production/attachments/3/2018/02/02/11/47dd7342-24fc-4f93-a5ee-1a0a8bd5cb2c.png" alt="image.png (32.0 kB)"></li><li><blockquote class="twitter-tweet" data-lang="en"><p lang="ja" dir="ltr"><a href="https://t.co/xLOP6qBiVI" target="_blank" rel="noopener">https://t.co/xLOP6qBiVI</a> をみてアニメーション作る方法がわかったぽい。なるほど。 <a href="https://t.co/STiZW5OSY3" target="_blank" rel="noopener">pic.twitter.com/STiZW5OSY3</a></p>&mdash; Koshikawa Naoto (@ppworks) <a href="https://twitter.com/ppworks/status/959304011869405185?ref_src=twsrc%5Etfw" target="_blank" rel="noopener">February 2, 2018</a></blockquote><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script></li></ul></li></ul><h2 id="学び"><a href="#学び" class="headerlink" title="学び"></a>学び</h2><ul><li>そもそもどうやってアニメーション作るんだっけ<ul><li><a href="http://schoo.jp/class/4560/room" target="_blank" rel="noopener">UnityのuGUIで作る2Dゲーム -応用編/ゲームをリッチにするテクニック- - Schoo（スクー）</a>を復習した</li></ul></li><li>草をいっぱい敷き詰めたい<ul><li><a href="https://qiita.com/murapong/items/739db2e7b2efa98d5640" target="_blank" rel="noopener">UnityのuGUIで画像をタイリング表示するには - Qiita</a></li></ul></li><li>もぐらをマスクして、ニュッと出したい<ul><li><a href="http://kan-kikuchi.hatenablog.com/entry/Mask" target="_blank" rel="noopener">SpriteやImageでMaskを使う【Unity】【uGUI】 - (:3[kanのメモ帳]</a></li></ul></li><li>もぐらをなんかいっぱい出したい<ul><li><a href="https://www.amazon.co.jp/dp/4797393521" target="_blank" rel="noopener">Unityの教科書 Unity 2017完全対応版 2D&amp;3Dスマートフォンゲーム入門講座 (Entertainment&amp;IDEA) | 北村 愛実 |本 | 通販 | Amazon</a>のP.200あたりからを復習</li></ul></li><li>prefabはCanvasにセットしたい<ul><li><a href="http://appneets.blog.jp/archives/1029983752.html" target="_blank" rel="noopener">【Unity】【uGUI】Canvasの子要素にGameObjectをInstantiateする : アプリニーツ</a></li></ul></li></ul><h2 id="わからん"><a href="#わからん" class="headerlink" title="わからん"></a>わからん</h2><ul><li>Animatiorのtriggerの発動のさせ方</li><li>重ならないようにいい感じにprefabを配置する方法<ul><li>そりゃまあ頑張ればできるのは分かる</li></ul></li></ul><h2 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h2><p>ほとんど、フォトショさわってた。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;/posts/270&quot;&gt;#270:  blog/uGUIについて学んだ&lt;/a&gt; 結果、2Dゲームは&lt;code&gt;uGUI&lt;/code&gt;で作った方が楽ぽいので、作り直しはじめた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;もぐらたたきのイラスト | かわいいフリー素材集 いら
      
    
    </summary>
    
    
      <category term="unity" scheme="https://ppworks.github.io/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>今までのリモートワークで起きた問題を整理してみる</title>
    <link href="https://ppworks.github.io/posts/279/"/>
    <id>https://ppworks.github.io/posts/279/</id>
    <published>2020-11-13T22:20:12.852Z</published>
    <updated>2020-11-13T22:20:12.852Z</updated>
    
    <content type="html"><![CDATA[<p>とある会社でリモートワーク導入前にポエんだ記事をシェア。</p><p><a href="https://esa-pages.io/p/sharing/4729/posts/132/6bd4abb83198863472f3.html" target="_blank" rel="noopener">ポエム/今までのリモートワークで起きた問題を整理してみる - esa-pages.io</a>をそのまま雑アウトプットへ持ってきた。</p><h2 id="経歴"><a href="#経歴" class="headerlink" title="経歴"></a>経歴</h2><p><a href="http://jigokuno.com/eid_366.html" target="_blank" rel="noopener"><img src="http://livedoor.blogimg.jp/jigokuno_misawa/imgs/5/a/5a33cfae.gif" alt="惚れさせ355 「飽き」 マジ飽きたわー ほんと飽きた あれまだやってる奴いるの？ ほんと飽きたわー！ 俺が一番先に飽きたわー"></a></p><ul><li>2009.09-2011.06<ul><li>2009年にフリーランスになってから手伝っていた会社（その後その会社へJOIN）でリモートワークを1年半ほど。</li><li>3.11はたまたまMTGがあって出社日だったけども、出勤しようとしたタイミングで担当のサービスのサーバーが言うこと聞いてくれなくてヨシヨシしてたらアノ地震がやってきた。</li></ul></li><li>2012.07-2014.09<ul><li>その会社を辞めた後にその会社の同僚と一緒に契約社員でとある会社に1年限定JOINした後、自分だけその会社にフリーランスで残った。その後起業した。どちらもリモートワークが主でMTGのあるときだけカフェで関係者と会ったり間借りしてたオフィスへ行ったり。</li></ul></li></ul><h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><p>2009-の方は、自分たちでとにかくイロイロ環境を作ってたので、HPの格安サーバーにVMware ESXiを突っ込んで、OpenVPN張って、IRCやgitやdeploy環境、本番への踏み台サーバへアクセスという感じだった。</p><p>2012-以降は、割りとSaSSが便利になってきており、skypeとgithubとherokuがあればokという環境。</p><h2 id="仕事しない問題"><a href="#仕事しない問題" class="headerlink" title="仕事しない問題"></a>仕事しない問題</h2><p>リモートワーク初期に起こりうる仕事しない問題。会社側の懸念の上位にありそう。リモートワーク初心者、特にフリーランス初心者の場合は更に特にある問題で、特定の期日までに成果を上げればいいので土壇場まで仕事しなくなるという問題があった。コレは、フリーランスの場合やらなきゃ食べていけないっので割と直ぐ仕事しだす。会社勤めだと厄介。どうしてもやる気が出なければ、まずは好きなだけ寝てみたり漫画でも読めばいいんだけど、そんなことに時間使いたかったのか？とう自問自答が割と早くやって来るので安心していい。完全に自由な状況になると人はむしろ今一番時間を使うべき問題に時間を使いはじめるようになるので、放っておけば勝手に仕事はし始める。効率的に仕事をしようという気になるだろう。どうしても、しない場合はもう辞めればいい。仕事がそもそも向いてないかも知れない。もしくはもはや出社すればいいかもしれない。</p><p><strong>目的をしっかりと持って、取り組むことで、ちゃんと成果を出せるようにすべき。何故リモートワークをするんだっけ？という出発点が大事。</strong></p><h2 id="仕事し過ぎ問題"><a href="#仕事し過ぎ問題" class="headerlink" title="仕事し過ぎ問題"></a>仕事し過ぎ問題</h2><p>逆に仕事し過ぎることも問題である。なんせ、起きた瞬間から寝る瞬間までいくらでも仕事が出来る環境となるので、今日はここまでやるぞという気持ちが大事。よく考えるとそれは出社しても同じだった。</p><p>個人的には集中しまくっているときは寝ずに朝まで走りきって次のはセーブみたいなのが一番効率が良かった。</p><p><strong>週1リモートワークの場合は、始業時間を早めるのと同時に終業時間もメリハリをもって設定すべきかと思う。いつもの働き方にプラスαぐらいの変化がちょうどよいだろう。</strong></p><h2 id="コミュニケーション問題"><a href="#コミュニケーション問題" class="headerlink" title="コミュニケーション問題"></a>コミュニケーション問題</h2><p>口頭でのコミュニケーションが減ることによってむしろ会話がアーカイブされて良い。<strong>普段からのコミュニケーションもなるべくアーカイブ性が高まる方向性を意識</strong>するようになる。</p><p>むしろ普段から口頭だけでコミュニケーションを終わらせちゃダメ。<a href="http://ppworks.hatenablog.jp/entry/2015/01/06/073834" target="_blank" rel="noopener">ちゃんと記録に残す</a></p><p>どうしても必要なMTGも事前のアジェンダ準備をキチンとして口頭で話すべき内容だけをMTGで話せばそれが対面だろうがリモートだろうが変わらないけども唯一補完出来ないのがアイコンタクト。相手の表情などが汲み取れない。なのでそこだけは必要以上に補足することが必要となる。もしくはそのためだけに会えばいい。後はナンカ絵文字とかで感情を伝えればいいんじゃない？（要出典）</p><p>また積極的なチャットやgithub上でのコミュニケーションが必要となるので、コミュニケーションを不要なコストと考えているとリモートワークは難しい。そもそもチームにおいてコミュニケーションは必要コストであるという感覚が必要。1人で仕事するとそのコストが全くなくなるので体感するといいかも知れない。</p><h2 id="話しかけられない問題"><a href="#話しかけられない問題" class="headerlink" title="話しかけられない問題"></a>話しかけられない問題</h2><p>気を使わずメンションすればいい。</p><h2 id="気分転換に近所を歩くと仕事してないのかなって思われる問題"><a href="#気分転換に近所を歩くと仕事してないのかなって思われる問題" class="headerlink" title="気分転換に近所を歩くと仕事してないのかなって思われる問題"></a>気分転換に近所を歩くと仕事してないのかなって思われる問題</h2><p>フルリモートだと、最初の1週間ぐらいソワソワするけど、慣れる。</p><h2 id="リモートMTGで部屋のクローゼットが映る問題"><a href="#リモートMTGで部屋のクローゼットが映る問題" class="headerlink" title="リモートMTGで部屋のクローゼットが映る問題"></a>リモートMTGで部屋のクローゼットが映る問題</h2><p>みんなそう。扉を閉めるといいかも。</p><h2 id="太る問題"><a href="#太る問題" class="headerlink" title="太る問題"></a>太る問題</h2><p>ほんとそう。気をつけないといけない。</p><h2 id="自宅のほうがマシンが強い"><a href="#自宅のほうがマシンが強い" class="headerlink" title="自宅のほうがマシンが強い"></a>自宅のほうがマシンが強い</h2><p>あるある。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;とある会社でリモートワーク導入前にポエんだ記事をシェア。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://esa-pages.io/p/sharing/4729/posts/132/6bd4abb83198863472f3.html&quot; target=&quot;_blank&quot; rel
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Railsのcookies serializerの設定変更時には heroku の preboot の設定を確認しておくこと</title>
    <link href="https://ppworks.github.io/posts/287/"/>
    <id>https://ppworks.github.io/posts/287/</id>
    <published>2020-11-13T22:20:12.852Z</published>
    <updated>2020-11-13T22:20:12.852Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Rails.application.config.action_dispatch.cookies_serializer = :marshal</span><br></pre></td></tr></table></figure><p>から</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Rails.application.config.action_dispatch.cookies_serializer = :hybrid</span><br></pre></td></tr></table></figure><p>にして、移行は完璧！と思っていても</p><p><a href="https://devcenter.heroku.com/articles/preboot" target="_blank" rel="noopener">https://devcenter.heroku.com/articles/preboot</a></p><p>が<code>enabled</code>のままだと、大変なことになるから気をつけろ！</p><p>基本的に新旧バージョンのサーバインスタンスが共存し得る場合に困るような更新がある場合は<code>disabled</code>にしておかないと<code>rollback</code>しても<code>deploy</code>しなおしても、状況がつかめず悪化するだけになるので気をつけねばならない。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Selenium::DriverのChrome のオプションの渡し方が変わってた</title>
    <link href="https://ppworks.github.io/posts/324/"/>
    <id>https://ppworks.github.io/posts/324/</id>
    <published>2020-11-13T22:20:12.852Z</published>
    <updated>2020-11-13T22:20:12.852Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/SeleniumHQ/selenium/compare/selenium-3.12.0...selenium-3.13.0" target="_blank" rel="noopener">https://github.com/SeleniumHQ/selenium/compare/selenium-3.12.0...selenium-3.13.0</a></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">diff --git a/spec/rails_helper.rb b/spec/rails_helper.rb</span><br><span class="line">index 890a93ba..3cde2021 100644</span><br><span class="line"><span class="comment">--- a/spec/rails_helper.rb</span></span><br><span class="line"><span class="comment">+++ b/spec/rails_helper.rb</span></span><br><span class="line">@@ -29,13 +29,13 @@ RSpec.configure do |config|</span><br><span class="line">   Capybara.configure do |config|</span><br><span class="line">     config.server = :puma</span><br><span class="line">   end</span><br><span class="line"><span class="addition">+</span></span><br><span class="line">   Capybara.register_driver :headless_chrome do |app|</span><br><span class="line">     Capybara::Selenium::Driver.new(app,</span><br><span class="line">       browser: :chrome,</span><br><span class="line"><span class="deletion">-      desired_capabilities: Selenium::WebDriver::Remote::Capabilities.chrome(</span></span><br><span class="line"><span class="deletion">-        chrome_options: &#123;</span></span><br><span class="line"><span class="deletion">-          args: %w(--headless --disable-gpu window-size=1680,1050 --lang=ja-JP --proxy-server=127.0.0.1:9292),</span></span><br><span class="line"><span class="deletion">-        &#125;,</span></span><br><span class="line"><span class="addition">+      desired_capabilities: Selenium::WebDriver::Remote::Capabilities.chrome(),</span></span><br><span class="line"><span class="addition">+      options: Selenium::WebDriver::Chrome::Options.new(</span></span><br><span class="line"><span class="addition">+        args: %w(--headless --disable-gpu window-size=1680,1050 --lang=ja-JP --proxy-server=127.0.0.1:9292)</span></span><br><span class="line">       )</span><br><span class="line">     )</span><br><span class="line">   end</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://github.com/SeleniumHQ/selenium/compare/selenium-3.12.0...selenium-3.13.0&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.
      
    
    </summary>
    
    
  </entry>
  
</feed>
